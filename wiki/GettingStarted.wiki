#summary Getting Started with ICODE-MDA

= Prerequisites =
* Coding Standard

Read over the coding standard if you plan on submitting code to the project. Indentation - Allman style using three spaces:

http://en.wikipedia.org/wiki/Indent_style#Allman_style_.28bsd_in_Emacs.29

* Visual Studio 2010 Express (or similar compiler)

http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express

* CMAKE (2.8.3 or newer)

http://www.cmake.org/cmake/resources/software.html

* OSSIM 3rd-party libraries

You can download the pre-built libraries from here if you are using Visual Studio 2010 Express. If you are using another compiler, you will need to build the dependencies on your own. Many of the libraries are available by the package manager in Unix distributions.

http://icode-mda.googlecode.com/files/3rd-party.zip

* SVN Client

Any SVN client should work. [http://tortoisesvn.net/ Tortoise SVN] is our preferred SVN client.

* OSSIM source code

http://trac.osgeo.org/ossim/

http://trac.osgeo.org/ossim/wiki/svn


* OpenCV

http://opencv.willowgarage.com/wiki/

= Setting up the development environment (Windows) =
*Install Visual Studio 2010 Express (c++) with all of the default settings

*Install CMake with all of the default settings

*Install OpenCV with default arguments (rebuild it using CMake if it doesn't come with the binaries for your compiler )

*Download the OSSIM 3rd-party libraries to your local machine.

*Download the OSSIM source code using SVN from:<br>
http://svn.osgeo.org/ossim/trunk


*Run CMake script for building OSSIM libraries

*Configure your OSSIM_PREFS file

http://trac.osgeo.org/ossim/wiki/ossimPreferenceFile

*Subscribe to the mailing list

All questions relating to this project should be directed to:

https://lists.sourceforge.net/lists/listinfo/icode-mda-developer

= Setting up the development environment (Fedora Linux) =
{{{yum install svncmakegcc-c++qt-developencv-devellibgeotiff-devellibjpeg-devellibtiff-develOpenSceneGraph-develgdalgdal-develzlib-developenmpi-develminizip-devellibcurl-devellibcurlexpat-develexpat yasmlibtoolpostgismapserver}}}

= Building the ICODE-MDA Applications =
Once you have the development environment setup you can now begin building MDA applications using OSSIM and OpenCV. To download the ICODE-MDA source code, follow the directions at:

http://code.google.com/p/icode-mda/source/checkout

Once you download the code, the following folder contains CMake build scripts which can be used to build the project:

//trunk/shipDetectionApp/buildScripts 

You will need to edit these batch files to make them agree with your system. Be sure to check the path of the vcvarsall.bat and CMake. Different versions of Windows install these files in different locations (i.e. C:\Program Files (x86) instead of C:\Program Files).

The top 4 variables in the cmake_arguments.bat file will need to be changed to agree with your machine. You will also need to make sure that the OpenCV libraries that are reffered to in the OPENCV_LIBRARIES variable have the same version number/name as the libraries that you have installed.

*build_cmake_project_vs10.bat

{{{
@echo off

set OLDPATH=%PATH%

call "C:\Program Files\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"

set PATH="C:\Program Files\CMake 2.8\bin";%PATH%

call cmake_arguments.bat

set PATH=%OLDPATH%
set OLDPATH=
}}}


*cmake_arguments.bat

{{{
set common_dir="C:/libraries/ossim-3rd-party-vs2010"
set common_lib=%common_dir%/lib/win32
set ossim_install_dir="C:/libraries/ossim_install"
set ossim_lib=%ossim_install_dir%/lib

cmake -G "Visual Studio 10"^
 -DCMAKE_BUILD_TYPE=Release^
 -DCMAKE_INCLUDE_PATH=%common_dir%/include^
 -DOPENCV_INCLUDE_DIR=%common_dir%/include^
 -DOPENCV_LIBRARIES=%common_lib%/cv210.lib;%common_lib%/cvaux210.lib;%common_lib%/cxcore210.lib;%common_lib%/cxts210.lib;%common_lib%/ml210.lib;%common_lib%/highgui210.lib^
 -DOSSIM_INCLUDE_DIR=%ossim_install_dir%/include^
 -DOSSIM_LIBRARIES=%ossim_lib%/ossim.lib^
 -DSHAPELIB_LIRARY=%common_lib%/shapelib.lib^
 .

}}}

Once you have properly edited the above batch files, you should be able to run *build_cmake_project_vs10.bat* to create a Visual Studio 2010 project which can be opened to used to build the application.